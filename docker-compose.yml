services:

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: ${ZOOKEEPER_CLIENT_PORT}
      ZOOKEEPER_TICK_TIME: ${ZOOKEEPER_TICK_TIME}
    ports:
      - ${ZOOKEEPER_CLIENT_PORT}:${ZOOKEEPER_CLIENT_PORT}
    networks:
      zookeeper-kafka:

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - ${KAFKA_PORT}:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:${ZOOKEEPER_CLIENT_PORT}
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      zookeeper-kafka:

  postgres:
    image: postgres
    ports:
      - "${DB_BACKEND_EXTERNAL_PORT}:5432"
    environment:

      - POSTGRES_USER=${DB_BACKEND_USERNAME}
      - POSTGRES_PASSWORD=${DB_BACKEND_PASSWORD}

    volumes:
      - ~/Volumes/postgresql:/var/lib/postgresql/data
    networks:
      - db-backend
      - backend-frontend

  backend:
    build:
      context: .
    volumes:
      - ../docker-java-jar:/code
    ports:
      - "${BACKEND_PORT}:8080"
    restart: on-failure
    environment:
      spring.kafka.bootstrap-servers: "kafka:9092"
      spring.datasource.url: "jdbc:postgresql://postgres:5432/postgres"
    depends_on:
      - postgres
      - kafka
    networks:
      - db-backend
      - backend-frontend
      - zookeeper-kafka

  ui:
    build:
      context: ui/.
    ports:
      - '3006:3005'
    volumes:
      - ./ui/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./ui/public/index.html:/usr/share/nginx/html/index.html
      - ./ui/public/css:/usr/share/nginx/html/css
    depends_on:
      - backend
    networks:
      - backend-frontend


networks:
  zookeeper-kafka:
  db-backend:
  backend-frontend:
